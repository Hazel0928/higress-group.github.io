"use strict";(self.webpackChunkhigress_website=self.webpackChunkhigress_website||[]).push([[1136],{3905:(n,e,r)=>{r.d(e,{Zo:()=>c,kt:()=>u});var t=r(7294);function i(n,e,r){return e in n?Object.defineProperty(n,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[e]=r,n}function o(n,e){var r=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.push.apply(r,t)}return r}function s(n){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){i(n,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(r,e))}))}return n}function g(n,e){if(null==n)return{};var r,t,i=function(n,e){if(null==n)return{};var r,t,i={},o=Object.keys(n);for(t=0;t<o.length;t++)r=o[t],e.indexOf(r)>=0||(i[r]=n[r]);return i}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(t=0;t<o.length;t++)r=o[t],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(n,r)&&(i[r]=n[r])}return i}var l=t.createContext({}),a=function(n){var e=t.useContext(l),r=e;return n&&(r="function"==typeof n?n(e):s(s({},e),n)),r},c=function(n){var e=a(n.components);return t.createElement(l.Provider,{value:e},n.children)},p="mdxType",f={inlineCode:"code",wrapper:function(n){var e=n.children;return t.createElement(t.Fragment,{},e)}},m=t.forwardRef((function(n,e){var r=n.components,i=n.mdxType,o=n.originalType,l=n.parentName,c=g(n,["components","mdxType","originalType","parentName"]),p=a(r),m=i,u=p["".concat(l,".").concat(m)]||p[m]||f[m]||o;return r?t.createElement(u,s(s({ref:e},c),{},{components:r})):t.createElement(u,s({ref:e},c))}));function u(n,e){var r=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var o=r.length,s=new Array(o);s[0]=m;var g={};for(var l in e)hasOwnProperty.call(e,l)&&(g[l]=e[l]);g.originalType=n,g[p]="string"==typeof n?n:i,s[1]=g;for(var a=2;a<o;a++)s[a]=r[a];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8844:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>g,toc:()=>a});var t=r(7462),i=(r(7294),r(3905));const o={title:"Higress \u5168\u5c40\u914d\u7f6e\u63a7\u5236\u9762\u539f\u7406\u5206\u6790",keywords:["higress"],description:"Higress \u5168\u5c40\u914d\u7f6e\u63a7\u5236\u9762\u539f\u7406\u5206\u6790",author:"Jun",date:new Date("2023-07-23T00:00:00.000Z"),custom_edit_url:"https://github.com/higress-group/higress-group.github.io/blob/main/i18n/zh-cn/docusaurus-plugin-content-blog/configmap.md"},s=void 0,g={permalink:"/zh-cn/blog/configmap",editUrl:"https://github.com/higress-group/higress-group.github.io/blob/main/i18n/zh-cn/docusaurus-plugin-content-blog/configmap.md",source:"@site/i18n/zh-cn/docusaurus-plugin-content-blog/configmap.md",title:"Higress \u5168\u5c40\u914d\u7f6e\u63a7\u5236\u9762\u539f\u7406\u5206\u6790",description:"Higress \u5168\u5c40\u914d\u7f6e\u63a7\u5236\u9762\u539f\u7406\u5206\u6790",date:"2023-07-23T00:00:00.000Z",formattedDate:"2023\u5e747\u670823\u65e5",tags:[],readingTime:10.945,hasTruncateMarker:!1,authors:[{name:"Jun"}],frontMatter:{title:"Higress \u5168\u5c40\u914d\u7f6e\u63a7\u5236\u9762\u539f\u7406\u5206\u6790",keywords:["higress"],description:"Higress \u5168\u5c40\u914d\u7f6e\u63a7\u5236\u9762\u539f\u7406\u5206\u6790",author:"Jun",date:"2023-07-23T00:00:00.000Z",custom_edit_url:"https://github.com/higress-group/higress-group.github.io/blob/main/i18n/zh-cn/docusaurus-plugin-content-blog/configmap.md"},nextItem:{title:"Higress\u52a9\u529bAI\u5927\u6a21\u578b\u4f01\u4e1a\u7ea7\u5e94\u7528\u843d\u5730",permalink:"/zh-cn/blog/ai_plugin"}},l={authorsImageUrls:[void 0]},a=[{value:"1. \u6574\u4f53\u67b6\u6784",id:"1-\u6574\u4f53\u67b6\u6784",level:2},{value:"2. \u6838\u5fc3\u7ec4\u4ef6",id:"2-\u6838\u5fc3\u7ec4\u4ef6",level:2},{value:"3. \u6838\u5fc3\u6d41\u7a0b",id:"3-\u6838\u5fc3\u6d41\u7a0b",level:2},{value:"1. \u521d\u59cb\u5316\u5165\u53e3",id:"1-\u521d\u59cb\u5316\u5165\u53e3",level:2},{value:"2. HigressConfigController \u521d\u59cb\u5316",id:"2-higressconfigcontroller-\u521d\u59cb\u5316",level:2},{value:"3. ConfigmapMgr \u521d\u59cb\u5316",id:"3-configmapmgr-\u521d\u59cb\u5316",level:2},{value:"1. configmapMgr \u53d8\u66f4\u5904\u7406",id:"1-configmapmgr-\u53d8\u66f4\u5904\u7406",level:2},{value:"2. TracingController \u53d8\u66f4\u5904\u7406",id:"2-tracingcontroller-\u53d8\u66f4\u5904\u7406",level:2},{value:"1. IngressConfig List \u4e0b\u53d1 EnvoyFilters \u5217\u8868",id:"1-ingressconfig-list-\u4e0b\u53d1-envoyfilters-\u5217\u8868",level:2},{value:"2. ConfigmapMgr \u6784\u5efa EnvoyFilter \u5217\u8868",id:"2-configmapmgr-\u6784\u5efa-envoyfilter-\u5217\u8868",level:2},{value:"3. TracingController \u6784\u5efa EnvoyFilters",id:"3-tracingcontroller-\u6784\u5efa-envoyfilters",level:2},{value:"1. HigressConfig \u7ed3\u6784\u4f53\u6dfb\u52a0\u5bf9\u5e94\u7684\u6269\u5c55\u914d\u7f6e",id:"1-higressconfig-\u7ed3\u6784\u4f53\u6dfb\u52a0\u5bf9\u5e94\u7684\u6269\u5c55\u914d\u7f6e",level:2},{value:"2. \u589e\u52a0\u6269\u5c55\u914d\u7f6e\u9ed8\u8ba4\u503c",id:"2-\u589e\u52a0\u6269\u5c55\u914d\u7f6e\u9ed8\u8ba4\u503c",level:2},{value:"3. \u5b9e\u73b0 ItemController interface",id:"3-\u5b9e\u73b0-itemcontroller-interface",level:2},{value:"4. \u521d\u59cb\u5316\u6269\u5c55\u914d\u7f6e\uff0c\u540c\u65f6\u6dfb\u52a0\u5230 ItemControllers",id:"4-\u521d\u59cb\u5316\u6269\u5c55\u914d\u7f6e\u540c\u65f6\u6dfb\u52a0\u5230-itemcontrollers",level:2}],c={toc:a},p="wrapper";function f(n){let{components:e,...o}=n;return(0,i.kt)(p,(0,t.Z)({},c,o,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Higress \u6709\u4e2a\u5168\u5c40\u914d\u7f6e ConfigMap \u5bf9\u8c61 higress-config\uff0c\u53c2\u8003\u914d\u7f6e\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\ndata:\n  higress: |-\n    tracing:\n      enable: true\n      sampling: 100\n      timeout: 500\n      skywalking:\n       service: skywalking-oap-server.op-system.svc.cluster.local\n       port: 11800\n...\n...\nkind: ConfigMap\nmetadata:\n  name: higress-config\n  namespace: higress-system\n")),(0,i.kt)("p",null,"\u5177\u4f53\u914d\u7f6e\u8bf4\u660e\u8bf7\u53c2\u8003 ",(0,i.kt)("a",{parentName:"p",href:"https://higress.io/zh-cn/docs/user/configmap"},"Higress \u5168\u5c40\u914d\u7f6e\u8bf4\u660e\u6587\u6863"),"\uff0c\n\u672c\u6587\u4ecb\u7ecd\u4ee5 Tracing \u4e3a\u4f8b\uff0c\u8be6\u7ec6\u8bf4\u660e Tracing \u5168\u5c40\u914d\u7f6e\u662f\u5982\u4f55\u8f6c\u6210 EnvoyFilter \u548c\u5982\u4f55\u540c\u65f6\u5b9e\u73b0\u5b9e\u65f6\u4e0b\u53d1\u5230 Higress Gateway\u8fc7\u7a0b\u3002"),(0,i.kt)("p",null,"\u672c\u6587\u6d89\u53ca\u6574\u4f53\u67b6\u6784\u6d41\u7a0b\u3001\u521d\u59cb\u5316\u8fc7\u7a0b\u548c\u542f\u52a8\u3001higress-config \u53d8\u66f4\u548c\u5904\u7406\u6d41\u7a0b\u3001\u901a\u77e5 XDSUpdater\u3001\u6784\u5efa EnvoyFilter \u548c\u4e0b\u53d1\u4ee5\u53ca\u5982\u4f55\u6269\u5c55\u5168\u5c40\u914d\u7f6e\u7b49\u5185\u5bb9\u3002"),(0,i.kt)("h1",{id:"\u4e00\u6574\u4f53\u67b6\u6784\u6d41\u7a0b"},"\u4e00\u3001\u6574\u4f53\u67b6\u6784\u6d41\u7a0b"),(0,i.kt)("h2",{id:"1-\u6574\u4f53\u67b6\u6784"},"1. \u6574\u4f53\u67b6\u6784"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img.png",src:r(5922).Z,width:"2704",height:"1196"})),(0,i.kt)("h2",{id:"2-\u6838\u5fc3\u7ec4\u4ef6"},"2. \u6838\u5fc3\u7ec4\u4ef6"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"IngressConfig")),(0,i.kt)("p",null,"IngressConfig \u662f Higress \u4e00\u4e2a\u6838\u5fc3\u7ed3\u6784\u4f53, \u8d1f\u8d23\u76d1\u63a7 Ingress\uff0c McpBridge, Http2Rpc, WasmPlugin \u7b49 k8s \u8d44\u6e90\uff0c \u540c\u65f6\u96c6\u6210 ConfigStore Interface\uff0c\u901a\u8fc7 List \u63a5\u53e3\u4e0b\u53d1 VirtualService, DestinationRule, EnvoyFilter, ServiceEntry, WasmPlugin \u7b49 CR \u8d44\u6e90\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"ConfigmapMgr")),(0,i.kt)("p",null,"ConfigmapMgr \u7ed3\u6784\u4f53\u8d1f\u8d23\u6574\u4e2a\u6838\u5fc3\u6d41\u7a0b\uff0c\u5305\u62ec\u901a\u8fc7 Informer List/Watch \u673a\u5236\u76d1\u63a7 higress-config \u7684\u53d8\u66f4\uff0c\u540c\u65f6\u904d\u5386 ItemControllers \u4e0b\u53d1\u53d8\u66f4\u901a\u77e5\uff0c\u63d0\u4f9b\u6784\u5efa EnvoyFilter \u5217\u8868\u7b49\u529f\u80fd\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"TracingController")),(0,i.kt)("p",null,"TracingController \u7ed3\u6784\u4f53\u8d1f\u8d23\u5177\u4f53\u7684 Tracing \u6570\u636e\u6821\u9a8c\uff0c\u6784\u5efa Tracing EnvoyFilter, \u4ee5\u53ca\u901a\u8fc7 ItemEventHandler \u4e0b\u53d1\u53d8\u66f4\u901a\u77e5\u7b49\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"HigressConfig")),(0,i.kt)("p",null,"HigressConfig \u662f higress-config Configmap \u6240\u5bf9\u5e94\u6570\u636e\u7684\u7ed3\u6784\u4f53\u3002"),(0,i.kt)("h2",{id:"3-\u6838\u5fc3\u6d41\u7a0b"},"3. \u6838\u5fc3\u6d41\u7a0b"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u7528 Informer List/Watch \u673a\u5236\u76d1\u63a7 higress-config \u53d8\u66f4\uff0c\u6821\u9a8c\u53d8\u66f4\uff0c\u540c\u65f6\u4fdd\u5b58\u53d8\u66f4\u540e\u6570\u636e\u3002"),(0,i.kt)("li",{parentName:"ul"},"\u7528\u53d8\u66f4\u6570\u636e\u6784\u5efa EnvoyFilter\u3002"),(0,i.kt)("li",{parentName:"ul"},"\u901a\u77e5 XDSUpdater\uff0cEnvoyFilter \u6709\u53d8\u66f4\uff0c\u91cd\u65b0\u62c9\u53d6\u65b0\u7684 EnvoyFilter \u5217\u8868\u3002")),(0,i.kt)("h1",{id:"\u4e8c\u521d\u59cb\u5316\u8fc7\u7a0b"},"\u4e8c\u3001\u521d\u59cb\u5316\u8fc7\u7a0b"),(0,i.kt)("h2",{id:"1-\u521d\u59cb\u5316\u5165\u53e3"},"1. \u521d\u59cb\u5316\u5165\u53e3"),(0,i.kt)("p",null,"\u521d\u59cb\u5316\u8fc7\u7a0b\u5165\u53e3\u5728 NewIngressConfig\uff0c \u521d\u59cb\u5316 IngressConfig \u65f6\u540c\u65f6\u6784\u5efa HigressConfigController \u548c ConfigmapMgr\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-golang"},"// pkg/ingress/config/ingress_config.go\nfunc NewIngressConfig(localKubeClient kube.Client, XDSUpdater model.XDSUpdater, namespace, clusterId string) *IngressConfig {\n    // ...\n    \n    // \u6784\u5efa controller \u548c configmapMgr\n    higressConfigController := configmap.NewController(localKubeClient, clusterId, namespace)\n    config.configmapMgr = configmap.NewConfigmapMgr(XDSUpdater, namespace, higressConfigController, higressConfigController.Lister())\n\n    return config\n}\n")),(0,i.kt)("h2",{id:"2-higressconfigcontroller-\u521d\u59cb\u5316"},"2. HigressConfigController \u521d\u59cb\u5316"),(0,i.kt)("p",null,"\u901a\u8fc7 Higress \u63d0\u4f9b NewCommonController \u521d\u59cb\u5316 HigressConfigController \u7528\u4e8e\u76d1\u542c higress-system \u547d\u540d\u7a7a\u95f4\u4e0b Configmap \u7684\u53d8\u5316\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-golang"},'// pkg/ingress/kube/configmap/controller.go\ntype HigressConfigController controller.Controller[listersv1.ConfigMapNamespaceLister]\n\nfunc NewController(client kubeclient.Client, clusterId string, namespace string) HigressConfigController {\n    informer := client.KubeInformer().Core().V1().ConfigMaps().Informer()\n    return controller.NewCommonController("higressConfig", client.KubeInformer().Core().V1().ConfigMaps().Lister().ConfigMaps(namespace),\n        informer, GetConfigmap, clusterId)\n}\n\nfunc GetConfigmap(lister listersv1.ConfigMapNamespaceLister, namespacedName types.NamespacedName) (controllers.Object, error) {\n    return lister.Get(namespacedName.Name)\n}\n')),(0,i.kt)("h2",{id:"3-configmapmgr-\u521d\u59cb\u5316"},"3. ConfigmapMgr \u521d\u59cb\u5316"),(0,i.kt)("p",null,"ConfigmapMgr \u521d\u59cb\u5316\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u6784\u5efa ConfigmapMgr"),(0,i.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e HigressConfigController configmap \u65b0\u589e\u6216\u8005\u66f4\u65b0\u56de\u8c03\u51fd\u6570\u4e3a configmapMgr.AddOrUpdateHigressConfig"),(0,i.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e HigressConfig \u7ed3\u6784\u4f53\u9ed8\u8ba4\u503c"),(0,i.kt)("li",{parentName:"ul"},"\u521d\u59cb\u5316 TracingController"),(0,i.kt)("li",{parentName:"ul"},"\u628a tracingController \u6dfb\u52a0\u5230 configmapMgr itemControllers \u6570\u7ec4\u91cc"),(0,i.kt)("li",{parentName:"ul"},"\u521d\u59cb\u5316 ItemEventHandler\uff0c \u540c\u65f6\u904d\u5386 itemControllers\uff0c\u8bbe\u7f6e ItemEventHandler")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-golang"},"// pkg/ingress/kube/configmap/controller.go\nfunc NewConfigmapMgr(XDSUpdater model.XDSUpdater, namespace string, higressConfigController HigressConfigController, higressConfigLister listersv1.ConfigMapNamespaceLister) *ConfigmapMgr {\n    //  \u6784\u5efa ConfigmapMgr\n    configmapMgr := &ConfigmapMgr{\n        XDSUpdater:              XDSUpdater,\n        Namespace:               namespace,\n        HigressConfigController: higressConfigController,\n        HigressConfigLister:     higressConfigLister,\n        higressConfig:           atomic.Value{},\n    }\n    // \u8bbe\u7f6e HigressConfigController configmap \u65b0\u589e\u6216\u8005\u66f4\u65b0\u56de\u8c03\u51fd\u6570 configmapMgr.AddOrUpdateHigressConfig\n    configmapMgr.HigressConfigController.AddEventHandler(configmapMgr.AddOrUpdateHigressConfig)\n    // \u8bbe\u7f6e HigressConfig \u7ed3\u6784\u4f53\u9ed8\u8ba4\u503c\n    configmapMgr.SetHigressConfig(NewDefaultHigressConfig())\n\n    // \u521d\u59cb\u5316 TracingController\n    tracingController := NewTracingController(namespace)\n    // \u628a tracingController \u6dfb\u52a0\u5230 configmapMgr itemControllers \u91cc\n    configmapMgr.AddItemControllers(tracingController)\n    // \u521d\u59cb\u5316 itemEventHandler\uff0c \u540c\u65f6\u904d\u5386 itemControllers\uff0c\u8bbe\u7f6e itemEventHandler\n    configmapMgr.initEventHandlers()\n\n    // \u8fd4\u56de configmapMgr\n    return configmapMgr\n}\n")),(0,i.kt)("h1",{id:"\u4e09\u542f\u52a8"},"\u4e09\u3001\u542f\u52a8"),(0,i.kt)("p",null,"\u5728 IngressConfig \u6dfb\u52a0 HigressConfigController Run() \u548c HasSynced() \u63a7\u5236\u6d41\u7a0b\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-golang"},"// pkg/ingress/config/ingress_config.go\nfunc (m *IngressConfig) Run(stop <-chan struct{}) {\n    // ...\n    // \u542f\u52a8 HigressConfigController\n    go m.configmapMgr.HigressConfigController.Run(stop)\n}\n\nfunc (m *IngressConfig) HasSynced() bool {\n    // ....\n    if !m.configmapMgr.HigressConfigController.HasSynced() {\n        return false\n    }\n}\n")),(0,i.kt)("h1",{id:"\u56dbhigress-config-\u53d8\u66f4\u548c\u5904\u7406\u6d41\u7a0b"},"\u56db\u3001higress-config \u53d8\u66f4\u548c\u5904\u7406\u6d41\u7a0b"),(0,i.kt)("h2",{id:"1-configmapmgr-\u53d8\u66f4\u5904\u7406"},"1. configmapMgr \u53d8\u66f4\u5904\u7406"),(0,i.kt)("p",null,"ConfigmapMgr \u901a\u8fc7\u6536\u5230 HigressConfigController \u901a\u77e5\u6765\u5904\u7406\u53d8\u66f4\u8bf7\u6c42\u3002"),(0,i.kt)("p",null,"\u5177\u4f53\u53d8\u66f4\u6d41\u7a0b\u5982\u4e0b\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u5224\u65ad\u662f\u5426 higress-system \u547d\u540d\u7a7a\u95f4\u4e0b name \u4e3a higress-config Configmap \u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5982\u679c\u4e0d\u662f\u5c31\u8fd4\u56de\u3002"),(0,i.kt)("li",{parentName:"ul"},"\u83b7\u53d6 higress-config \u5185\u5bb9\u3002"),(0,i.kt)("li",{parentName:"ul"},"\u904d\u5386 ItemControllers, \u6821\u9a8c higress-config \u914d\u7f6e\u662f\u5426\u5408\u6cd5\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u8fd4\u56de\u4e0d\u5408\u6cd5\uff0c\u5c31\u8fd4\u56de\u3002"),(0,i.kt)("li",{parentName:"ul"},"\u548c\u4e0a\u6b21\u4fdd\u5b58\u5728\u672c\u5730 higressConfig \u6bd4\u5bf9, \u68c0\u67e5\u8fd9\u6b21\u6570\u636e\u662f\u5426\u6709\u53d8\u5316\uff0c\u5982\u679c\u6ca1\u6709\u53d8\u5316\u5c31\u8fd4\u56de\u3002"),(0,i.kt)("li",{parentName:"ul"},"\u5982\u679c\u6570\u636e\u6709\u53d8\u5316\uff0c\u5c31\u904d\u5386 ItemControllers \u901a\u77e5\u6bcf\u4e2a itemController \u6570\u636e\u6709\u53d8\u5316\uff0c\u540c\u65f6\u4fdd\u5b58\u8fd9\u6b21\u53d8\u5316\u5230\u672c\u5730 higressConfig\u3002")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-golang"},'// pkg/ingress/kube/configmap/controller.go\nfunc (c *ConfigmapMgr) AddOrUpdateHigressConfig(name util.ClusterNamespacedName) {\n    // \u53ea\u76d1\u542c higress-system \u547d\u540d\u7a7a\u95f4\u4e0b name \u4e3a higress-config Configmap \u7684\u53d8\u5316\n    if name.Namespace != c.Namespace || name.Name != HigressConfigMapName {\n        return\n    }\n    // ...\n    // \u83b7\u53d6 higress-config \u5185\u5bb9\n    higressConfigmap, err := c.HigressConfigLister.Get(HigressConfigMapName)\n    \n    // \u901a\u8fc7 yaml.Unmarshal \u8f6c\u6210 HigressConfig\n    newHigressConfig := NewDefaultHigressConfig()\n    if err = yaml.Unmarshal([]byte(higressConfigmap.Data[HigressConfigMapKey]), newHigressConfig); err != nil {\n        IngressLog.Errorf("data:%s,  convert to higress config error, error: %+v", higressConfigmap.Data[HigressConfigMapKey], err)\n        return\n    }\n\n    // ...\n    // \u904d\u5386 ItemControllers, \u6821\u9a8c\u914d\u7f6e\u662f\u5426\u5408\u6cd5\n    for _, itemController := range c.ItemControllers {\n        if itemErr := itemController.ValidHigressConfig(newHigressConfig); itemErr != nil {\n            IngressLog.Errorf("configmap %s controller valid higress config error, error: %+v", itemController.GetName(), itemErr)\n            return\n        }\n    }\n\n    // \u548c\u4e0a\u6b21\u6bd4\u5bf9\u8fd9\u6b21\u6570\u636e\u662f\u5426\u6709\u53d8\u66f4\n    oldHigressConfig := c.GetHigressConfig()\n    result, _ := c.CompareHigressConfig(oldHigressConfig, newHigressConfig)\n    // ...\n    // \u5982\u679c\u6570\u636e\u6709\u53d8\u66f4\uff0c\u5c31\u904d\u5386 ItemControllers \u901a\u77e5\u6bcf\u4e2a itemController \u6570\u636e\u6709\u53d8\u66f4\uff0c\u540c\u65f6\u4fdd\u5b58\u8fd9\u6b21\u53d8\u66f4\u5230\u672c\u5730\u3002\n    if result == ResultReplace || result == ResultDelete {\n        for _, itemController := range c.ItemControllers {\n            IngressLog.Infof("configmap %s controller AddOrUpdateHigressConfig", itemController.GetName())\n            if itemErr := itemController.AddOrUpdateHigressConfig(name, oldHigressConfig, newHigressConfig); itemErr != nil {\n                IngressLog.Errorf("configmap %s controller AddOrUpdateHigressConfig error, error: %+v", itemController.GetName(), itemErr)\n            }\n        }\n        // \u4fdd\u5b58\u8fd9\u6b21\u53d8\u66f4\n        c.SetHigressConfig(newHigressConfig)\n    }\n}\n')),(0,i.kt)("h2",{id:"2-tracingcontroller-\u53d8\u66f4\u5904\u7406"},"2. TracingController \u53d8\u66f4\u5904\u7406"),(0,i.kt)("p",null,"TracingController \u53d8\u66f4\u5904\u7406\u5c31\u6bd4\u8f83\u7b80\u5355\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u68c0\u67e5 Tracing \u8fd9\u90e8\u5206\u6570\u636e\u662f\u5426\u6709\u53d8\u66f4\u3002"),(0,i.kt)("li",{parentName:"ul"},"\u5982\u679c\u6709\u53d8\u66f4\uff0cDeepCopy \u4e00\u4efd Tracing \u6570\u636e\u4fdd\u5b58\u5230\u672c\u5730\uff0c\u540c\u65f6\u901a\u8fc7 eventHandler \u4e0b\u53d1\u53d8\u66f4\u901a\u77e5\u3002")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-golang"},'// pkg/ingress/kube/configmap/tracing.go\nfunc (t *TracingController) AddOrUpdateHigressConfig(name util.ClusterNamespacedName, old *HigressConfig, new *HigressConfig) error {\n    // ...\n    // \u68c0\u67e5 Tracing \u90e8\u5206\u6570\u636e\u662f\u5426\u6709\u53d8\u66f4\n    result, _ := compareTracing(old.Tracing, new.Tracing)\n\n    // \u5982\u679c\u6709\u53d8\u66f4\uff0cDeepCopy \u4e00\u4efd Tracing \u6570\u636e\u4fdd\u5b58\u5230\u672c\u5730\uff0c\u540c\u65f6\u901a\u8fc7 eventHandler \u4e0b\u53d1\u53d8\u66f4\u901a\u77e5\n    switch result {\n    case ResultReplace:\n        if newTracing, err := deepCopyTracing(new.Tracing); err != nil {\n            IngressLog.Infof("tracing deepcopy error:%v", err)\n        } else {\n            t.SetTracing(newTracing)\n            IngressLog.Infof("AddOrUpdate Higress config tracing")\n            t.eventHandler(higressTracingEnvoyFilterName)\n            IngressLog.Infof("send event with filter name:%s", higressTracingEnvoyFilterName)\n        }\n    case ResultDelete:\n        t.SetTracing(NewDefaultTracing())\n        IngressLog.Infof("Delete Higress config tracing")\n        t.eventHandler(higressTracingEnvoyFilterName)\n        IngressLog.Infof("send event with filter name:%s", higressTracingEnvoyFilterName)\n    }\n\n    return nil\n}\n')),(0,i.kt)("h1",{id:"\u4e94\u901a\u77e5-xdsupdater"},"\u4e94\u3001\u901a\u77e5 XDSUpdater"),(0,i.kt)("p",null,"\u5728 ConfigmapMgr \u521d\u59cb\u5316\u65f6\u5019\u8c03\u7528 configmapMgr.initEventHandlers()\uff0c \u8fd9\u4e2a func \u4f1a\u521b\u5efa ItemEventHandler, \u540c\u65f6\u904d\u5386 ItemControllers \u8bbe\u7f6e ItemEventHandler\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-golang"},"// pkg/ingress/kube/configmap/config.go\ntype ItemEventHandler = func(name string)\n\n// pkg/ingress/kube/configmap/controller.go\nfunc (c *ConfigmapMgr) initEventHandlers() error {\n    itemEventHandler := func(name string) {\n    c.XDSUpdater.ConfigUpdate(&model.PushRequest{\n        Full: true,\n        ConfigsUpdated: map[model.ConfigKey]struct{}{{\n            Kind:      gvk.EnvoyFilter,\n            Name:      name,\n            Namespace: c.Namespace,\n        }: {}},\n        Reason: []model.TriggerReason{ModelUpdatedReason},\n        })\n    }\n    \n    for _, itemController := range c.ItemControllers {\n        itemController.RegisterItemEventHandler(itemEventHandler)\n    }\n    \n    return nil\n}\n")),(0,i.kt)("p",null,"\u8fd9\u91cc XDSUpdater \u662f\u4ece IngressConfig \u521d\u59cb\u5316\u4f20\u5165\uff0c XDSUpdater.ConfigUpdate() \u7528\u4e8e\u66f4\u65b0\u901a\u77e5\u4e0b\u53d1\u3002"),(0,i.kt)("p",null,"\u8fdb\u4e00\u6b65\u8ddf\u8e2a\u53ef\u4ee5\u53d1\u73b0\u5728 Higress controller server \u542f\u52a8\u65f6\u6267\u884c s.initXdsServer \u51fd\u6570\u521b\u5efa s.xdsServer\uff0c\u5177\u4f53\u903b\u8f91\u4e0d\u5728\u672c\u6587\u8ba8\u8bba\u8303\u56f4, \u6709\u5174\u8da3\u53ef\u4ee5\u8fdb\u4e00\u6b65\u9605\u8bfb\u6e90\u7801\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-golang"},'// pkg/bootstrap/server.go\nfunc NewServer(args *ServerArgs) (*Server, error) {\n    // ...\n    s := &Server{\n        ServerArgs:      args,\n        httpMux:         http.NewServeMux(),\n        environment:     e,\n        readinessProbes: make(map[string]readinessProbe),\n        server:          server.New(),\n    }\n    s.environment.Watcher = mesh.NewFixedWatcher(&v1alpha1.MeshConfig{})\n    s.environment.Init()\n    initFuncList := []func() error{\n        s.initKubeClient,\n        s.initXdsServer,\n        s.initHttpServer,\n        s.initConfigController,\n        s.initRegistryEventHandlers,\n        s.initAuthenticators,\n    }\n\n    for _, f := range initFuncList {\n        if err := f(); err != nil {\n            return nil, err\n        }\n    }\n\n    // ...\n    return s, nil\n}\n\n// pkg/bootstrap/server.go\nfunc (s *Server) initXdsServer() error {\n    log.Info("init xds server")\n    s.xdsServer = xds.NewDiscoveryServer(s.environment, nil, PodName, PodNamespace, s.RegistryOptions.KubeOptions.ClusterAliases)\n    // ...\n    return s.initGrpcServer()\n}\n')),(0,i.kt)("h1",{id:"\u516d\u6784\u5efa\u548c\u4e0b\u53d1-envoyfilters"},"\u516d\u3001\u6784\u5efa\u548c\u4e0b\u53d1 EnvoyFilters"),(0,i.kt)("h2",{id:"1-ingressconfig-list-\u4e0b\u53d1-envoyfilters-\u5217\u8868"},"1. IngressConfig List \u4e0b\u53d1 EnvoyFilters \u5217\u8868"),(0,i.kt)("p",null,"IngressConfig List \u7528\u4e8e VirtualService, DestinationRule, EnvoyFilter, ServiceEntry, WasmPlugin \u7b49 CR \u8d44\u6e90\u4e0b\u53d1\uff0c \u8fd9\u91cc\u4e3b\u8981\u5173\u6ce8 EnvoyFilter CR \u8d44\u6e90\u4e0b\u53d1\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-golang"},'// pkg/ingress/config/ingress_config.go\nfunc (m *IngressConfig) List(typ config.GroupVersionKind, namespace string) ([]config.Config, error) {\n    if typ != gvk.Gateway &&\n        typ != gvk.VirtualService &&\n        typ != gvk.DestinationRule &&\n        typ != gvk.EnvoyFilter &&\n        typ != gvk.ServiceEntry &&\n        typ != gvk.WasmPlugin {\n        return nil, common.ErrUnsupportedOp\n    }\n    // ...\n    if typ == gvk.EnvoyFilter {\n        m.mutex.RLock()\n        defer m.mutex.RUnlock()\n        var envoyFilters []config.Config\n        \n        // \u8c03\u7528 ConfigmapMgr ConstructEnvoyFilters \u83b7\u53d6\u9700\u8981\u4e0b\u53d1 EnvoyFilter \u5217\u8868\n        configmapEnvoyFilters, err := m.configmapMgr.ConstructEnvoyFilters()\n        if err != nil {\n            IngressLog.Errorf("Construct configmap EnvoyFilters error %v", err)\n        } else {\n            for _, envoyFilter := range configmapEnvoyFilters {\n                envoyFilters = append(envoyFilters, *envoyFilter)\n            }\n            IngressLog.Infof("Append %d configmap EnvoyFilters", len(configmapEnvoyFilters))\n        }\n        if len(envoyFilters) == 0 {\n            IngressLog.Infof("resource type %s, configs number %d", typ, len(m.cachedEnvoyFilters))\n            return m.cachedEnvoyFilters, nil\n        }\n        // \u9700\u8981\u4e0b\u53d1 configmap EnvoyFilter \u5217\u8868 \u548c m.cachedEnvoyFilters \u5217\u8868\u805a\u5408\u4e00\u4e0b\u4e0b\u53d1\n        envoyFilters = append(envoyFilters, m.cachedEnvoyFilters...)\n        IngressLog.Infof("resource type %s, configs number %d", typ, len(envoyFilters))\n        return envoyFilters, nil\n    }\n    \n}   \n')),(0,i.kt)("p",null,"\u8c03\u7528 ConfigmapMgr ConstructEnvoyFilters \u83b7\u53d6\u9700\u8981\u4e0b\u53d1 EnvoyFilter \u5217\u8868\uff0c \u540c\u65f6\u548c m.cachedEnvoyFilters \u5217\u8868\u805a\u5408\u4e00\u4e0b\u518d\u4e0b\u53d1\u3002"),(0,i.kt)("p",null,"\u8fd9\u91cc m.cachedEnvoyFilters \u662f\u5728\u6784\u5efa VirtualService \u65f6\u751f\u6210\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u8fdb\u4e00\u6b65\u9605\u8bfb IngressConfig \u6e90\u7801\u3002"),(0,i.kt)("h2",{id:"2-configmapmgr-\u6784\u5efa-envoyfilter-\u5217\u8868"},"2. ConfigmapMgr \u6784\u5efa EnvoyFilter \u5217\u8868"),(0,i.kt)("p",null,"\u8fd9\u91cc\u6bd4\u8f83\u7b80\u5355\uff0c\u904d\u5386\u4e00\u4e0b ItemControllers\uff0c\u805a\u5408\u6bcf\u4e2a itemController \u8fd4\u56de\u7684 EnvoyFilters."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-golang"},'// /pkg/ingress/kube/configmap/controller.go\nfunc (c *ConfigmapMgr) ConstructEnvoyFilters() ([]*config.Config, error) {\n    configs := make([]*config.Config, 0)\n    for _, itemController := range c.ItemControllers {\n        IngressLog.Infof("controller %s ConstructEnvoyFilters", itemController.GetName())\n        if itemConfigs, err := itemController.ConstructEnvoyFilters(); err != nil {\n            IngressLog.Errorf("controller %s ConstructEnvoyFilters error, error: %+v", itemController.GetName(), err)\n        } else {\n            configs = append(configs, itemConfigs...)\n        }\n    }\n    return configs, nil\n}\n')),(0,i.kt)("h2",{id:"3-tracingcontroller-\u6784\u5efa-envoyfilters"},"3. TracingController \u6784\u5efa EnvoyFilters"),(0,i.kt)("p",null,"\u8fd9\u91cc\u5c31\u6bd4\u8f83\u7b80\u5355\uff0c\u6839\u636e\u4fdd\u5b58\u7684 Tracing \u6570\u636e\u6784\u5efa\u5bf9\u5e94\u7684 EnvoyFilter"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-golang"},'// pkg/ingress/kube/configmap/tracing.go\nfunc (t *TracingController) ConstructEnvoyFilters() ([]*config.Config, error) {\n    // ...\n    tracingConfig := t.constructTracingTracer(tracing, namespace)\n    if len(tracingConfig) == 0 {\n        return configs, nil\n    }\n\n    config := &config.Config{\n        Meta: config.Meta{\n            GroupVersionKind: gvk.EnvoyFilter,\n            Name:             higressTracingEnvoyFilterName,\n            Namespace:        namespace,\n        },\n        Spec: &networking.EnvoyFilter{\n            ConfigPatches: []*networking.EnvoyFilter_EnvoyConfigObjectPatch{\n                {\n                    ApplyTo: networking.EnvoyFilter_NETWORK_FILTER,\n                    Match: &networking.EnvoyFilter_EnvoyConfigObjectMatch{\n                        Context: networking.EnvoyFilter_GATEWAY,\n                        ObjectTypes: &networking.EnvoyFilter_EnvoyConfigObjectMatch_Listener{\n                            Listener: &networking.EnvoyFilter_ListenerMatch{\n                                FilterChain: &networking.EnvoyFilter_ListenerMatch_FilterChainMatch{\n                                    Filter: &networking.EnvoyFilter_ListenerMatch_FilterMatch{\n                                        Name: "envoy.filters.network.http_connection_manager",\n                                    },\n                                },\n                            },\n                        },\n                    },\n                    Patch: &networking.EnvoyFilter_Patch{\n                        Operation: networking.EnvoyFilter_Patch_MERGE,\n                        Value:     util.BuildPatchStruct(tracingConfig),\n                    },\n                },\n                {\n                    ApplyTo: networking.EnvoyFilter_HTTP_FILTER,\n                    Match: &networking.EnvoyFilter_EnvoyConfigObjectMatch{\n                        Context: networking.EnvoyFilter_GATEWAY,\n                        ObjectTypes: &networking.EnvoyFilter_EnvoyConfigObjectMatch_Listener{\n                            Listener: &networking.EnvoyFilter_ListenerMatch{\n                                FilterChain: &networking.EnvoyFilter_ListenerMatch_FilterChainMatch{\n                                    Filter: &networking.EnvoyFilter_ListenerMatch_FilterMatch{\n                                        Name: "envoy.filters.network.http_connection_manager",\n                                        SubFilter: &networking.EnvoyFilter_ListenerMatch_SubFilterMatch{\n                                            Name: "envoy.filters.http.router",\n                                        },\n                                    },\n                                },\n                            },\n                        },\n                    },\n                    Patch: &networking.EnvoyFilter_Patch{\n                        Operation: networking.EnvoyFilter_Patch_MERGE,\n                        Value: util.BuildPatchStruct(`{\n                            "name":"envoy.filters.http.router",\n                            "typed_config":{\n                                "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router",\n                                "start_child_span": true\n                            }\n                        }`),\n                    },\n                },\n            },\n        },\n    }\n\n    configs = append(configs, config)\n    return configs, nil\n}\n')),(0,i.kt)("h1",{id:"\u4e03\u5982\u4f55\u6269\u5c55\u5168\u5c40\u914d\u7f6e"},"\u4e03\u3001\u5982\u4f55\u6269\u5c55\u5168\u5c40\u914d\u7f6e"),(0,i.kt)("h2",{id:"1-higressconfig-\u7ed3\u6784\u4f53\u6dfb\u52a0\u5bf9\u5e94\u7684\u6269\u5c55\u914d\u7f6e"},"1. HigressConfig \u7ed3\u6784\u4f53\u6dfb\u52a0\u5bf9\u5e94\u7684\u6269\u5c55\u914d\u7f6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-golang"},'type HigressConfig struct {\n    Tracing *Tracing `json:"tracing,omitempty"`\n    // \u5728\u8fd9\u91cc\u6dfb\u52a0\u5bf9\u5e94\u7684\u6570\u636e\u7ed3\u6784\u6765\u6269\u5c55\u914d\u7f6e\n}\n')),(0,i.kt)("h2",{id:"2-\u589e\u52a0\u6269\u5c55\u914d\u7f6e\u9ed8\u8ba4\u503c"},"2. \u589e\u52a0\u6269\u5c55\u914d\u7f6e\u9ed8\u8ba4\u503c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-golang"},"// pkg/ingress/kube/configmap/config.go\nfunc NewDefaultHigressConfig() *HigressConfig {\n    higressConfig := &HigressConfig{\n        Tracing: NewDefaultTracing(),\n        // \u5728\u8fd9\u91cc\u589e\u52a0\u6269\u5c55\u914d\u7f6e\u9ed8\u8ba4\u503c\n    }\n    return higressConfig\n}\n")),(0,i.kt)("h2",{id:"3-\u5b9e\u73b0-itemcontroller-interface"},"3. \u5b9e\u73b0 ItemController interface"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-golang"},"type ItemController interface {\n    GetName() string\n    AddOrUpdateHigressConfig(name util.ClusterNamespacedName, old *HigressConfig, new *HigressConfig) error\n    ValidHigressConfig(higressConfig *HigressConfig) error\n    ConstructEnvoyFilters() ([]*config.Config, error)\n    RegisterItemEventHandler(eventHandler ItemEventHandler)\n}\n")),(0,i.kt)("h2",{id:"4-\u521d\u59cb\u5316\u6269\u5c55\u914d\u7f6e\u540c\u65f6\u6dfb\u52a0\u5230-itemcontrollers"},"4. \u521d\u59cb\u5316\u6269\u5c55\u914d\u7f6e\uff0c\u540c\u65f6\u6dfb\u52a0\u5230 ItemControllers"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-golang"},"func NewConfigmapMgr(XDSUpdater model.XDSUpdater, namespace string, higressConfigController HigressConfigController, higressConfigLister listersv1.ConfigMapNamespaceLister) *ConfigmapMgr {\n    // ...\n    tracingController := NewTracingController(namespace)\n    configmapMgr.AddItemControllers(tracingController)\n    // ...\n    // \u5728\u8fd9\u91cc\u521d\u59cb\u5316\u6269\u5c55\u914d\u7f6e\uff0c\u540c\u65f6\u6dfb\u52a0\u5230 ItemControllers\n    configmapMgr.initEventHandlers()\n\n    return configmapMgr\n}\n")))}f.isMDXComponent=!0},5922:(n,e,r)=>{r.d(e,{Z:()=>t});const t=r.p+"assets/images/configmap1-f2447fa1bd9826e78e29bcdf1f38a4ca.png"}}]);