"use strict";(self.webpackChunkhigress_website=self.webpackChunkhigress_website||[]).push([[2224],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,u=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),p=c(r),m=o,d=p["".concat(u,".").concat(m)]||p[m]||g[m]||s;return r?n.createElement(d,i(i({ref:t},l),{},{components:r})):n.createElement(d,i({ref:t},l))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,i=new Array(s);i[0]=m;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a[p]="string"==typeof e?e:o,i[1]=a;for(var c=2;c<s;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},81:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>g,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const s={title:"Higress Terminology",keywords:["Higress"],description:"Higress Terminology.",custom_edit_url:"https://github.com/higress-group/higress-group.github.io/blob/main/i18n/en-us/docusaurus-plugin-content-docs/current/overview/terminology.md"},i=void 0,a={unversionedId:"overview/terminology",id:"overview/terminology",title:"Higress Terminology",description:"Higress Terminology.",source:"@site/i18n/en-us/docusaurus-plugin-content-docs/current/overview/terminology.md",sourceDirName:"overview",slug:"/overview/terminology",permalink:"/en-us/docs/overview/terminology",draft:!1,editUrl:"https://github.com/higress-group/higress-group.github.io/blob/main/i18n/en-us/docusaurus-plugin-content-docs/current/overview/terminology.md",tags:[],version:"current",frontMatter:{title:"Higress Terminology",keywords:["Higress"],description:"Higress Terminology.",custom_edit_url:"https://github.com/higress-group/higress-group.github.io/blob/main/i18n/en-us/docusaurus-plugin-content-docs/current/overview/terminology.md"},sidebar:"docs",previous:{title:"Higress FAQ",permalink:"/en-us/docs/overview/faq"},next:{title:"Quick Start",permalink:"/en-us/docs/user/quickstart"}},u={},c=[{value:"Ingress Annotation (Annotation)",id:"ingress-annotation-annotation",level:2},{value:"Downstream",id:"downstream",level:2},{value:"Upstream",id:"upstream",level:2}],l={toc:c},p="wrapper";function g(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"#Higress Terminology"),(0,o.kt)("h2",{id:"ingress-annotation-annotation"},"Ingress Annotation (Annotation)"),(0,o.kt)("p",null,"The annotation (Annotation) field in the Ingress resource is a kv dictionary structure, which can implement various routing strategies in a declarative manner. As shown below, annotations are used to enable cross-domain access permission for the Ingress route:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n   name: ingress-example\n   annotations:\n     higress.io/enable-cors: "true"\nspec:\n   ingressClassName: nginx-example\n   rules:\n   - http:\n       paths:\n       - path: /test\n         pathType: Prefix\n         backend:\n           service:\n             name: test\n             port:\n               number: 80\n')),(0,o.kt)("p",null,"For other annotation configuration methods supported by Higress, please refer to ",(0,o.kt)("a",{parentName:"p",href:"/en-us/docs/user/annotation"},"Ingress Annotation Configuration Instructions")),(0,o.kt)("h2",{id:"downstream"},"Downstream"),(0,o.kt)("p",null,"Downstream refers to the source where Higress receives the request, usually a client such as a browser"),(0,o.kt)("h2",{id:"upstream"},"Upstream"),(0,o.kt)("p",null,"Upstream refers to the target backend service that Higress forwards the request to"))}g.isMDXComponent=!0}}]);