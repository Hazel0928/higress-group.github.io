"use strict";(self.webpackChunkhigress_website=self.webpackChunkhigress_website||[]).push([[1208],{3905:(e,n,r)=>{r.d(n,{Zo:()=>l,kt:()=>m});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=t.createContext({}),c=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},l=function(e){var n=c(e.components);return t.createElement(p.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=c(r),g=o,m=d["".concat(p,".").concat(g)]||d[g]||u[g]||a;return r?t.createElement(m,s(s({ref:n},l),{},{components:r})):t.createElement(m,s({ref:n},l))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=g;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[d]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=r[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}g.displayName="MDXCreateElement"},4319:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var t=r(7462),o=(r(7294),r(3905));const a={title:"\u5b9e\u73b0 SpringCloud \u670d\u52a1\u53d1\u73b0\u548c\u8def\u7531",keywords:["SpringCloud","discovery"],description:"\u5b9e\u73b0 SpringCloud \u670d\u52a1\u53d1\u73b0\u548c\u8def\u7531."},s="\u5b9e\u73b0 SpringCloud \u670d\u52a1\u53d1\u73b0\u548c\u8def\u7531",i={unversionedId:"user/spring-cloud",id:"user/spring-cloud",title:"\u5b9e\u73b0 SpringCloud \u670d\u52a1\u53d1\u73b0\u548c\u8def\u7531",description:"\u5b9e\u73b0 SpringCloud \u670d\u52a1\u53d1\u73b0\u548c\u8def\u7531.",source:"@site/docs/user/spring-cloud.md",sourceDirName:"user",slug:"/user/spring-cloud",permalink:"/en-us/docs/user/spring-cloud",draft:!1,tags:[],version:"current",frontMatter:{title:"\u5b9e\u73b0 SpringCloud \u670d\u52a1\u53d1\u73b0\u548c\u8def\u7531",keywords:["SpringCloud","discovery"],description:"\u5b9e\u73b0 SpringCloud \u670d\u52a1\u53d1\u73b0\u548c\u8def\u7531."},sidebar:"docs",previous:{title:"\u914d\u7f6e Ingress \u8f6c\u53d1\u7ed9\u6ce8\u518c\u5728 Nacos \u7684\u670d\u52a1",permalink:"/en-us/docs/user/nacos-route"},next:{title:"\u5b9e\u73b0 Dubbo \u670d\u52a1\u53d1\u73b0\u548c\u8def\u7531",permalink:"/en-us/docs/user/dubbo"}},p={},c=[{value:"\u4f7f\u7528 Nacos \u505a\u6ce8\u518c\u4e2d\u5fc3",id:"\u4f7f\u7528-nacos-\u505a\u6ce8\u518c\u4e2d\u5fc3",level:2},{value:"\u4e0d\u6307\u5b9a\u547d\u540d\u7a7a\u95f4",id:"\u4e0d\u6307\u5b9a\u547d\u540d\u7a7a\u95f4",level:3},{value:"\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\u3001\u670d\u52a1\u5206\u7ec4\u7b49\u4fe1\u606f",id:"\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\u670d\u52a1\u5206\u7ec4\u7b49\u4fe1\u606f",level:3},{value:"\u4f7f\u7528 ZooKeeper \u505a\u6ce8\u518c\u4e2d\u5fc3",id:"\u4f7f\u7528-zookeeper-\u505a\u6ce8\u518c\u4e2d\u5fc3",level:2},{value:"\u4e0d\u6307\u5b9a\u6ce8\u518c\u6839\u8def\u5f84",id:"\u4e0d\u6307\u5b9a\u6ce8\u518c\u6839\u8def\u5f84",level:3},{value:"\u6307\u5b9a\u6ce8\u518c\u6839\u8def\u5f84",id:"\u6307\u5b9a\u6ce8\u518c\u6839\u8def\u5f84",level:3}],l={toc:c},d="wrapper";function u(e){let{components:n,...r}=e;return(0,o.kt)(d,(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u5b9e\u73b0-springcloud-\u670d\u52a1\u53d1\u73b0\u548c\u8def\u7531"},"\u5b9e\u73b0 SpringCloud \u670d\u52a1\u53d1\u73b0\u548c\u8def\u7531"),(0,o.kt)("h2",{id:"\u4f7f\u7528-nacos-\u505a\u6ce8\u518c\u4e2d\u5fc3"},"\u4f7f\u7528 Nacos \u505a\u6ce8\u518c\u4e2d\u5fc3"),(0,o.kt)("p",null,"\u5e94\u7528\u914d\u7f6e\u5177\u4f53\u53c2\u8003",(0,o.kt)("a",{parentName:"p",href:"https://nacos.io/zh-cn/docs/quick-start-spring-cloud.html"},"Nacos Spring Cloud \u5feb\u901f\u5f00\u59cb"),"\u8fdb\u884c\u5e94\u7528\u914d\u7f6e"),(0,o.kt)("h3",{id:"\u4e0d\u6307\u5b9a\u547d\u540d\u7a7a\u95f4"},"\u4e0d\u6307\u5b9a\u547d\u540d\u7a7a\u95f4"),(0,o.kt)("p",null,"\u5982\u679c ",(0,o.kt)("inlineCode",{parentName:"p"},"application.properties")," \u4e2d\u6ca1\u6709\u6307\u5b9a Nacos \u547d\u540d\u7a7a\u95f4\uff0c\u4f8b\u5982\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"server.port=8080\nspring.application.name=my-service\n\nspring.cloud.nacos.discovery.server-addr=127.0.0.1:8848\n")),(0,o.kt)("p",null,"\u5219 Higress \u7684 ",(0,o.kt)("a",{parentName:"p",href:"/en-us/docs/user/mcp-bridge"},"McpBridge")," \u4e2d\u4ea6\u65e0\u9700\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: networking.higress.io/v1\nkind: McpBridge\nmetadata:\n  name: default\n  namespace: higress-system\nspec:\n  registries:\n    # \u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a my-nacos  \u7684\u670d\u52a1\u6765\u6e90\n  - name: my-nacos\n    # \u6ce8\u518c\u4e2d\u5fc3\u7c7b\u578b\u662f Nacos 2.x\uff0c\u652f\u6301 gRPC \u534f\u8bae\n    type: nacos2\n    # \u6ce8\u518c\u4e2d\u5fc3\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u53ef\u4ee5\u662f\u57df\u540d\u6216\u8005IP\n    domain: 127.0.0.1\n    # \u6ce8\u518c\u4e2d\u5fc3\u7684\u8bbf\u95ee\u7aef\u53e3\uff0cNacos \u9ed8\u8ba4\u90fd\u662f 8848\n    port: 8848\n    # Nacos \u670d\u52a1\u5206\u7ec4\n    nacosGroups:\n    - DEFAULT_GROUP\n")),(0,o.kt)("p",null,"\u914d\u7f6e Ingress \u8f6c\u53d1\u5230\u8fd9\u4e2a\u670d\u52a1(\u5047\u8bbe/api\u524d\u7f00\u7684\u8def\u7531\u90fd\u8f6c\u53d1\u7ed9\u8fd9\u4e2a\u670d\u52a1)\u9700\u8981\u505a\u5982\u4e0b\u914d\u7f6e\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    higress.io/destination: my-service.DEFAULT-GROUP.public.nacos\n  name: demo\n  namespace: default\nspec:\n  rules:\n  - http:\n      paths:\n      - backend:\n          resource:\n            apiGroup: networking.higress.io\n            kind: McpBridge\n            name: default\n        path: /api\n        pathType: Prefix\n")),(0,o.kt)("p",null,"\u6ce8\u610f\u8fd9\u91cc\u901a\u8fc7\u6ce8\u89e3",(0,o.kt)("inlineCode",{parentName:"p"},"higress.io/destination"),"\u6307\u5b9a\u8def\u7531\u6700\u7ec8\u8981\u8f6c\u53d1\u5230\u7684\u76ee\u6807\u670d\u52a1\u3002"),(0,o.kt)("p",null,"\u5bf9\u4e8e Nacos \u6765\u6e90\u7684\u670d\u52a1\uff0c\u8fd9\u91cc\u7684\u76ee\u6807\u670d\u52a1\u683c\u5f0f\u4e3a\uff1a\u201c\u670d\u52a1\u540d\u79f0.\u670d\u52a1\u5206\u7ec4.\u547d\u540d\u7a7a\u95f4ID.nacos\u201d\uff0c\u6ce8\u610f\u8fd9\u91cc\u9700\u8981\u9075\u5faa DNS \u57df\u540d\u683c\u5f0f\uff0c\u56e0\u6b64\u670d\u52a1\u5206\u7ec4\u4e2d\u7684\u4e0b\u5212\u7ebf'_'\u88ab\u8f6c\u6362\u6210\u4e86\u6a2a\u6760'-'\u3002\u547d\u540d\u7a7a\u95f4\u672a\u6307\u5b9a\u65f6\uff0c\u8fd9\u91cc\u9ed8\u8ba4\u503c\u4e3a\"public\"\u3002"),(0,o.kt)("h3",{id:"\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\u670d\u52a1\u5206\u7ec4\u7b49\u4fe1\u606f"},"\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\u3001\u670d\u52a1\u5206\u7ec4\u7b49\u4fe1\u606f"),(0,o.kt)("p",null,"\u5982\u679c ",(0,o.kt)("inlineCode",{parentName:"p"},"application.properties")," \u4e2d\u6307\u5b9a\u4e86 Nacos \u547d\u540d\u7a7a\u95f4\uff0c\u670d\u52a1\u5206\u7ec4\u7b49\u4fe1\u606f\uff0c\u4f8b\u5982\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"server.port=8080\nspring.application.name=my-service\n\nspring.cloud.nacos.discovery.server-addr=127.0.0.1:8848\nspring.cloud.nacos.discovery.namespace=d8ac64f3-xxxx-xxxx-xxxx-47a814ecf358\nspring.cloud.nacos.discovery.group=custom-group\n")),(0,o.kt)("p",null,"\u5219 Higress \u7684 McpBridge \u505a\u76f8\u5e94\u914d\u7f6e\u5373\u53ef"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: networking.higress.io/v1\nkind: McpBridge\nmetadata:\n  name: default\n  namespace: higress-system\nspec:\n  registries:\n    # \u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a my-nacos  \u7684\u670d\u52a1\u6765\u6e90\n  - name: my-nacos\n    # \u6ce8\u518c\u4e2d\u5fc3\u7c7b\u578b\u662f Nacos 2.x\uff0c\u652f\u6301 gRPC \u534f\u8bae\n    type: nacos2\n    # \u6ce8\u518c\u4e2d\u5fc3\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u53ef\u4ee5\u662f\u57df\u540d\u6216\u8005IP\n    domain: 127.0.0.1\n    # \u6ce8\u518c\u4e2d\u5fc3\u7684\u8bbf\u95ee\u7aef\u53e3\uff0cNacos \u9ed8\u8ba4\u90fd\u662f 8848\n    port: 8848\n    # Nacos \u547d\u540d\u7a7a\u95f4 ID\n    nacosNamespaceId: d8ac64f3-xxxx-xxxx-xxxx-47a814ecf358\n    # Nacos \u670d\u52a1\u5206\u7ec4\n    nacosGroups:\n    - custom-group\n")),(0,o.kt)("p",null,"\u914d\u7f6e Ingress \u8f6c\u53d1\u5230\u8fd9\u4e2a\u670d\u52a1(\u5047\u8bbe/api\u524d\u7f00\u7684\u8def\u7531\u90fd\u8f6c\u53d1\u7ed9\u8fd9\u4e2a\u670d\u52a1)\u9700\u8981\u505a\u5982\u4e0b\u914d\u7f6e\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    higress.io/destination: my-service.custom-group.d8ac64f3-xxxx-xxxx-xxxx-47a814ecf358.nacos\n  name: demo\n  namespace: default\nspec:\n  rules:\n  - http:\n      paths:\n      - backend:\n          resource:\n            apiGroup: networking.higress.io\n            kind: McpBridge\n            name: default\n        path: /api\n        pathType: Prefix\n")),(0,o.kt)("h2",{id:"\u4f7f\u7528-zookeeper-\u505a\u6ce8\u518c\u4e2d\u5fc3"},"\u4f7f\u7528 ZooKeeper \u505a\u6ce8\u518c\u4e2d\u5fc3"),(0,o.kt)("p",null,"\u4f7f\u7528 Zookeeper \u505a\u6ce8\u518c\u4e2d\u5fc3\u65f6\uff0c\u6ce8\u610f\u5fc5\u987b\u914d\u7f6e",(0,o.kt)("inlineCode",{parentName:"p"},"spring.cloud.zookeeper.discovery.preferIpAddress=true"),"\uff0c\u5426\u5219\u6ce8\u518c\u5230\u6ce8\u518c\u4e2d\u5fc3\u4e2d\u5230\u5730\u5740\u4e3a\u4e3b\u673a\u540d\u79f0\uff0c\u800c\u4e0d\u662fIP\u3002"),(0,o.kt)("h3",{id:"\u4e0d\u6307\u5b9a\u6ce8\u518c\u6839\u8def\u5f84"},"\u4e0d\u6307\u5b9a\u6ce8\u518c\u6839\u8def\u5f84"),(0,o.kt)("p",null,"\u5982\u679c ",(0,o.kt)("inlineCode",{parentName:"p"},"application.properties")," \u4e2d\u672a\u6307\u5b9a\u6ce8\u518c\u6839\u8def\u5f84\u4fe1\u606f\uff0c\u4f8b\u5982\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"spring.application.name=my-service\nspring.cloud.zookeeper.connect-string=127.0.0.1:2181\nspring.cloud.zookeeper.discovery.preferIpAddress=true\nspring.cloud.zookeeper.discovery.enabled=true\nspring.cloud.zookeeper.discovery.register=true\n")),(0,o.kt)("p",null,"\u5219 Higress \u7684 ",(0,o.kt)("a",{parentName:"p",href:"/en-us/docs/user/mcp-bridge"},"McpBridge")," \u4e2d\u4ea6\u65e0\u9700\u6307\u5b9azkServicePath\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: networking.higress.io/v1\nkind: McpBridge\nmetadata:\n  name: default\n  namespace: higress-system\nspec:\n  registries:\n    # \u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a my-zk  \u7684\u670d\u52a1\u6765\u6e90\n  - name: my-zk\n    # \u6ce8\u518c\u4e2d\u5fc3\u7c7b\u578b\u662f ZooKeeper\n    type: zookeeper\n    # \u6ce8\u518c\u4e2d\u5fc3\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u53ef\u4ee5\u662f\u57df\u540d\u6216\u8005IP\n    domain: 127.0.0.1\n    # \u6ce8\u518c\u4e2d\u5fc3\u7684\u8bbf\u95ee\u7aef\u53e3\n    port: 2181\n")),(0,o.kt)("p",null,"\u914d\u7f6e Ingress \u8f6c\u53d1\u5230\u8fd9\u4e2a\u670d\u52a1(\u5047\u8bbe/api\u524d\u7f00\u7684\u8def\u7531\u90fd\u8f6c\u53d1\u7ed9\u8fd9\u4e2a\u670d\u52a1)\u9700\u8981\u505a\u5982\u4e0b\u914d\u7f6e\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    higress.io/destination: my-service.services.zookeeper\n  name: demo\n  namespace: default\nspec:\n  rules:\n  - http:\n      paths:\n      - backend:\n          resource:\n            apiGroup: networking.higress.io\n            kind: McpBridge\n            name: default\n        path: /api\n        pathType: Prefix\n")),(0,o.kt)("p",null,'\u6ce8\u610f\u5bf9\u4e8e ZooKeeper \u6765\u6e90\u7684\u670d\u52a1\uff0c\u8fd9\u91cc\u7684\u76ee\u6807\u670d\u52a1\u683c\u5f0f\u4e3a\uff1a"\u670d\u52a1\u540d\u79f0.\u670d\u52a1\u6ce8\u518c\u6839\u8def\u5f84.zookeeper"\uff0cSpringCloud \u5728\u672a\u6307\u5b9a\u670d\u52a1\u6ce8\u518c\u6839\u8def\u5f84\u7684\u60c5\u51b5\u4e0b\uff0c\u6839\u8def\u5f84\u9ed8\u8ba4\u662f"services"'),(0,o.kt)("h3",{id:"\u6307\u5b9a\u6ce8\u518c\u6839\u8def\u5f84"},"\u6307\u5b9a\u6ce8\u518c\u6839\u8def\u5f84"),(0,o.kt)("p",null,"\u5982\u679c ",(0,o.kt)("inlineCode",{parentName:"p"},"application.properties")," \u4e2d\u6307\u5b9a\u4e86\u6ce8\u518c\u6839\u8def\u5f84\u4fe1\u606f\uff0c\u4f8b\u5982\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"spring.application.name=my-service\nspring.cloud.zookeeper.connect-string=127.0.0.1:2181\nspring.cloud.zookeeper.discovery.preferIpAddress=true\nspring.cloud.zookeeper.discovery.enabled=true\nspring.cloud.zookeeper.discovery.register=true\nspring.cloud.zookeeper.discovery.root=my-services-root\n")),(0,o.kt)("p",null,"\u5219 Higress \u7684 ",(0,o.kt)("a",{parentName:"p",href:"/en-us/docs/user/mcp-bridge"},"McpBridge")," \u4e2d\u4ea6\u9700\u6307\u5b9azkServicePath\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: networking.higress.io/v1\nkind: McpBridge\nmetadata:\n  name: default\n  namespace: higress-system\nspec:\n  registries:\n    # \u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a my-zk  \u7684\u670d\u52a1\u6765\u6e90\n  - name: my-zk\n    # \u6ce8\u518c\u4e2d\u5fc3\u7c7b\u578b\u662f ZooKeeper\n    type: zookeeper\n    # \u6ce8\u518c\u4e2d\u5fc3\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u53ef\u4ee5\u662f\u57df\u540d\u6216\u8005IP\n    domain: 127.0.0.1\n    # \u6ce8\u518c\u4e2d\u5fc3\u7684\u8bbf\u95ee\u7aef\u53e3\n    port: 2181\n    # \u5bf9\u5e94 spring.cloud.zookeeper.discovery.root \u914d\u7f6e\u5b57\u6bb5\n    zkServicePath:\n    - my-services-root\n")),(0,o.kt)("p",null,"\u914d\u7f6e Ingress \u8f6c\u53d1\u5230\u8fd9\u4e2a\u670d\u52a1(\u5047\u8bbe/api\u524d\u7f00\u7684\u8def\u7531\u90fd\u8f6c\u53d1\u7ed9\u8fd9\u4e2a\u670d\u52a1)\u9700\u8981\u505a\u5982\u4e0b\u914d\u7f6e\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    higress.io/destination: my-service.my-services-root.zookeeper\n  name: demo\n  namespace: default\nspec:\n  rules:\n  - http:\n      paths:\n      - backend:\n          resource:\n            apiGroup: networking.higress.io\n            kind: McpBridge\n            name: default\n        path: /api\n        pathType: Prefix\n")),(0,o.kt)("p",null,"\u6ce8\u610f\u5982\u679c spring.cloud.zookeeper.discovery.root \u4e2d\u5305\u542b\u4e86\u4e0b\u5212\u7ebf\uff0c\u9700\u8981\u88ab\u66ff\u6362\u4e3a\u6a2a\u6760\uff0c\u56e0\u4e3a\u76ee\u6807\u670d\u52a1\u6574\u4f53\u683c\u5f0f\u9700\u8981\u6ee1\u8db3 DNS \u57df\u540d\u89c4\u8303"))}u.isMDXComponent=!0}}]);