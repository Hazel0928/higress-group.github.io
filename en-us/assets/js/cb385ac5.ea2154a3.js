"use strict";(self.webpackChunkhigress_website=self.webpackChunkhigress_website||[]).push([[5688],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),d=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=d(r),m=a,g=c["".concat(s,".").concat(m)]||c[m]||p[m]||o;return r?n.createElement(g,l(l({ref:t},u),{},{components:r})):n.createElement(g,l({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var d=2;d<o;d++)l[d]=r[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5450:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var n=r(7462),a=(r(7294),r(3905));const o={title:"Robot Detect",keywords:["higress","bot detect"],description:"Bot Detect plugin configuration reference"},l=void 0,i={unversionedId:"plugins/bot-detect",id:"plugins/bot-detect",title:"Robot Detect",description:"Bot Detect plugin configuration reference",source:"@site/i18n/en-us/docusaurus-plugin-content-docs/current/plugins/bot-detect.md",sourceDirName:"plugins",slug:"/plugins/bot-detect",permalink:"/en-us/docs/plugins/bot-detect",draft:!1,editUrl:"https://github.com/higress-group/higress-group.github.io/blob/main/i18n/en-us/docusaurus-plugin-content-docs/current/plugins/bot-detect.md",tags:[],version:"current",frontMatter:{title:"Robot Detect",keywords:["higress","bot detect"],description:"Bot Detect plugin configuration reference"},sidebar:"docs",previous:{title:"Custom response",permalink:"/en-us/docs/plugins/custom-response"},next:{title:"request blocking",permalink:"/en-us/docs/plugins/request-block"}},s={},d=[{value:"Description",id:"description",level:2},{value:"Configuration Fields",id:"configuration-fields",level:2},{value:"Configuration Samples",id:"configuration-samples",level:2},{value:"Release Requests that would otherwise Hit the Crawler Rules",id:"release-requests-that-would-otherwise-hit-the-crawler-rules",level:3},{value:"Add Crawler Judgement",id:"add-crawler-judgement",level:3},{value:"Only Enabled for Specific Routes or Domains",id:"only-enabled-for-specific-routes-or-domains",level:3}],u={toc:d},c="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"bot-detect")," plugin can be used to identify and prevent web crawlers from crawling websites."),(0,a.kt)("h2",{id:"configuration-fields"},"Configuration Fields"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Requirement"),(0,a.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"allow"),(0,a.kt)("td",{parentName:"tr",align:null},"array of string"),(0,a.kt)("td",{parentName:"tr",align:null},"Optional"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"A regular expression to match the User-Agent request header and will allow access if the match hits")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"deny"),(0,a.kt)("td",{parentName:"tr",align:null},"array of string"),(0,a.kt)("td",{parentName:"tr",align:null},"Optional"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"A regular expression to match the User-Agent request header and will block the request if the match hits")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"blocked_code"),(0,a.kt)("td",{parentName:"tr",align:null},"number"),(0,a.kt)("td",{parentName:"tr",align:null},"Optional"),(0,a.kt)("td",{parentName:"tr",align:null},"403"),(0,a.kt)("td",{parentName:"tr",align:null},"The HTTP status code returned when a request is blocked")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"blocked_message"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Optional"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"The HTTP response Body returned when a request is blocked")))),(0,a.kt)("p",null,"If field ",(0,a.kt)("inlineCode",{parentName:"p"},"allow")," and field ",(0,a.kt)("inlineCode",{parentName:"p"},"deny")," are not configured at the same time, the default logic to identify crawlers will be executed. By configuring the ",(0,a.kt)("inlineCode",{parentName:"p"},"allow")," field, requests that would otherwise hit the default logic can be allowed. The judgement can be extended by configuring the ",(0,a.kt)("inlineCode",{parentName:"p"},"deny")," field"),(0,a.kt)("p",null,"The default set of crawler judgment regular expressions is as follows\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Bots General matcher 'name/0.0'\n    (?:\\/[A-Za-z0-9\\.]+|) {0,5}([A-Za-z0-9 \\-_\\!\\[\\]:]{0,50}(?:[Aa]rchiver|[Ii]ndexer|[Ss]craper|[Bb]ot|[Ss]pider|[Cc]rawl[a-z]{0,50}))[/ ](\\d+)(?:\\.(\\d+)(?:\\.(\\d+)|)|)\n# Bots General matcher 'name 0.0'\n    (?:\\/[A-Za-z0-9\\.]+|) {0,5}([A-Za-z0-9 \\-_\\!\\[\\]:]{0,50}(?:[Aa]rchiver|[Ii]ndexer|[Ss]craper|[Bb]ot|[Ss]pider|[Cc]rawl[a-z]{0,50})) (\\d+)(?:\\.(\\d+)(?:\\.(\\d+)|)|)\n# Bots containing spider|scrape|bot(but not CUBOT)|Crawl\n    ((?:[A-z0-9]{1,50}|[A-z\\-]{1,50} ?|)(?: the |)(?:[Ss][Pp][Ii][Dd][Ee][Rr]|[Ss]crape|[Cc][Rr][Aa][Ww][Ll])[A-z0-9]{0,50})(?:(?:[ /]| v)(\\d+)(?:\\.(\\d+)|)(?:\\.(\\d+)|)|)\n# Bots Pattern '/name-0.0'\n    /((?:Ant-)?Nutch|[A-z]+[Bb]ot|[A-z]+[Ss]pider|Axtaris|fetchurl|Isara|ShopSalad|Tailsweep)[ \\-](\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?\n# Bots Pattern 'name/0.0'\n    \\b(008|Altresium|Argus|BaiduMobaider|BoardReader|DNSGroup|DataparkSearch|EDI|Goodzer|Grub|INGRID|Infohelfer|LinkedInBot|LOOQ|Nutch|OgScrper|PathDefender|Peew|PostPost|Steeler|Twitterbot|VSE|WebCrunch|WebZIP|Y!J-BR[A-Z]|YahooSeeker|envolk|sproose|wminer)/(\\d+)(?:\\.(\\d+)|)(?:\\.(\\d+)|)\n# More bots\n    (CSimpleSpider|Cityreview Robot|CrawlDaddy|CrawlFire|Finderbots|Index crawler|Job Roboter|KiwiStatus Spider|Lijit Crawler|QuerySeekerSpider|ScollSpider|Trends Crawler|USyd-NLP-Spider|SiteCat Webbot|BotName\\/\\$BotVersion|123metaspider-Bot|1470\\.net crawler|50\\.nu|8bo Crawler Bot|Aboundex|Accoona-[A-z]{1,30}-Agent|AdsBot-Google(?:-[a-z]{1,30}|)|altavista|AppEngine-Google|archive.{0,30}\\.org_bot|archiver|Ask Jeeves|[Bb]ai[Dd]u[Ss]pider(?:-[A-Za-z]{1,30})(?:-[A-Za-z]{1,30}|)|bingbot|BingPreview|blitzbot|BlogBridge|Bloglovin|BoardReader Blog Indexer|BoardReader Favicon Fetcher|boitho.com-dc|BotSeer|BUbiNG|\\b\\w{0,30}favicon\\w{0,30}\\b|\\bYeti(?:-[a-z]{1,30}|)|Catchpoint(?: bot|)|[Cc]harlotte|Checklinks|clumboot|Comodo HTTP\\(S\\) Crawler|Comodo-Webinspector-Crawler|ConveraCrawler|CRAWL-E|CrawlConvera|Daumoa(?:-feedfetcher|)|Feed Seeker Bot|Feedbin|findlinks|Flamingo_SearchEngine|FollowSite Bot|furlbot|Genieo|gigabot|GomezAgent|gonzo1|(?:[a-zA-Z]{1,30}-|)Googlebot(?:-[a-zA-Z]{1,30}|)|Google SketchUp|grub-client|gsa-crawler|heritrix|HiddenMarket|holmes|HooWWWer|htdig|ia_archiver|ICC-Crawler|Icarus6j|ichiro(?:/mobile|)|IconSurf|IlTrovatore(?:-Setaccio|)|InfuzApp|Innovazion Crawler|InternetArchive|IP2[a-z]{1,30}Bot|jbot\\b|KaloogaBot|Kraken|Kurzor|larbin|LEIA|LesnikBot|Linguee Bot|LinkAider|LinkedInBot|Lite Bot|Llaut|lycos|Mail\\.RU_Bot|masscan|masidani_bot|Mediapartners-Google|Microsoft .{0,30} Bot|mogimogi|mozDex|MJ12bot|msnbot(?:-media {0,2}|)|msrbot|Mtps Feed Aggregation System|netresearch|Netvibes|NewsGator[^/]{0,30}|^NING|Nutch[^/]{0,30}|Nymesis|ObjectsSearch|OgScrper|Orbiter|OOZBOT|PagePeeker|PagesInventory|PaxleFramework|Peeplo Screenshot Bot|PlantyNet_WebRobot|Pompos|Qwantify|Read%20Later|Reaper|RedCarpet|Retreiver|Riddler|Rival IQ|scooter|Scrapy|Scrubby|searchsight|seekbot|semanticdiscovery|SemrushBot|Simpy|SimplePie|SEOstats|SimpleRSS|SiteCon|Slackbot-LinkExpanding|Slack-ImgProxy|Slurp|snappy|Speedy Spider|Squrl Java|Stringer|TheUsefulbot|ThumbShotsBot|Thumbshots\\.ru|Tiny Tiny RSS|Twitterbot|WhatsApp|URL2PNG|Vagabondo|VoilaBot|^vortex|Votay bot|^voyager|WASALive.Bot|Web-sniffer|WebThumb|WeSEE:[A-z]{1,30}|WhatWeb|WIRE|WordPress|Wotbox|www\\.almaden\\.ibm\\.com|Xenu(?:.s|) Link Sleuth|Xerka [A-z]{1,30}Bot|yacy(?:bot|)|YahooSeeker|Yahoo! Slurp|Yandex\\w{1,30}|YodaoBot(?:-[A-z]{1,30}|)|YottaaMonitor|Yowedo|^Zao|^Zao-Crawler|ZeBot_www\\.ze\\.bz|ZooShot|ZyBorg)(?:[ /]v?(\\d+)(?:\\.(\\d+)(?:\\.(\\d+)|)|)|)\n")),(0,a.kt)("h2",{id:"configuration-samples"},"Configuration Samples"),(0,a.kt)("h3",{id:"release-requests-that-would-otherwise-hit-the-crawler-rules"},"Release Requests that would otherwise Hit the Crawler Rules"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'allow:\n- ".*Go-http-client.*"\n')),(0,a.kt)("p",null,"Without this configuration, the default Golang web library request will be treated as a crawler and access will be denied."),(0,a.kt)("h3",{id:"add-crawler-judgement"},"Add Crawler Judgement"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'deny:\n- "spd-tools.*"\n')),(0,a.kt)("p",null,"According to this configuration, the following requests will be denied:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl http://example.com -H 'User-Agent: spd-tools/1.1'\ncurl http://exmaple.com -H 'User-Agent: spd-tools'\n")),(0,a.kt)("h3",{id:"only-enabled-for-specific-routes-or-domains"},"Only Enabled for Specific Routes or Domains"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'# Use _rules_ field for fine-grained rule configurations \n_rules_:\n# Rule 1: Match by route name\n- _match_route_:\n  - route-a\n  - route-b\n# Rule 2: Match by domain\n- _match_domain_:\n  - "*.example.com"\n  - test.com\n  allow:\n  - ".*Go-http-client.*"\n')),(0,a.kt)("p",null,"In the rule sample of ",(0,a.kt)("inlineCode",{parentName:"p"},"_match_route_"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"route-a")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"route-b")," are the route names provided when creating a new gateway route. When the current route names matches the configuration, the rule following shall be applied.\nIn the rule sample of ",(0,a.kt)("inlineCode",{parentName:"p"},"_match_domain_"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"*.example.com")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"test.com")," are the domain names used for request matching. When the current domain name matches the configuration, the rule following shall be applied.\nAll rules shall be checked following the order of items in the ",(0,a.kt)("inlineCode",{parentName:"p"},"_rules_")," field, The first matched rule will be applied. All remained will be ignored."))}p.isMDXComponent=!0}}]);